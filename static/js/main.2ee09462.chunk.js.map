{"version":3,"sources":["Styles/GlobalStyles.js","Components/TimeTable.js","Components/Player.js","Components/Home.js","Components/Stage.js","Components/Lineup.js","Components/Navigation.js","Components/Fullpage.js","Styles/Theme.js","Components/App.js","index.js"],"names":["createGlobalStyle","reset","styled","div","span","props","Math","floor","hour","gridRow","theme","color","point","header","title","stage","stageId","background","hoverFrames","keyframes","hover","marquee","Wrapper","Logo","Home","Stage","Lineup","Navigation","Fullpage","useMediaQuery","maxWidth","useState","play","setPlay","licenseKey","scrollingSpeed","controlArrows","loopHorizontal","normalScrollElements","keyboardScrolling","afterLoad","origin","destination","direction","index","afterSlideLoad","section","newPlay","map","v","i","render","state","fullpageApi","className","data-anchor","App","Theme","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ee09462.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport \"hover.css\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: \"Retrock\";\n        src: url(\"../fonts/Retrock.woff\") format(\"woff\"),\n        url(\"../fonts/Retrock.woff2\") format(\"woff2\"),\n        url(\"../fonts/Retrock.ttf\") format(\"truetype\");\n    }\n    ${reset};\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-size: 14px;\n    }\n    a{\n        text-decoration: none;\n    }\n    input:focus{\n        outline: none;\n    }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { stageA, stageB, stageC } from \"../data\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 768px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 30px 0px;\n  margin: auto;\n`;\n\nconst Title = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst TitleText = styled.div`\n  font-size: 70px;\n  /* text-transform: uppercase; */\n  flex: 0.5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Retrock\";\n`;\n\nconst Info = styled.div`\n  flex: 0.5;\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InfoText = styled.span`\n  /* border-bottom: 1px solid #7268a6; */\n  margin-bottom: 10px;\n  margin-right: 15px;\n  padding: 4px 2px;\n  font-size: 15px;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 700px;\n  display: grid;\n  grid-template-columns: 0.3fr 1fr 1fr 1fr;\n  column-gap: 5px;\n`;\n\nconst Time = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: repeat(28, 1fr);\n  row-gap: 4px;\n  ${(props) => {\n    return `div:nth-of-type(${Math.floor(props.hour / 2) + 2}){\n      border-top: 4px solid #7268a6;\n    }`;\n  }}\n`;\n\nconst TimeCell = styled.div`\n  width: 100%;\n  height: 100%;\n  font-size: 18px;\n  text-align: right;\n  grid-row: ${(props) => props.gridRow};\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 5px;\n  user-select: none;\n`;\n\nconst Stage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: repeat(14, 1fr);\n  row-gap: 4px;\n  div:nth-of-type(${(props) => Math.floor(props.hour / 2) + 1}) {\n    background-color: ${(props) => props.theme.color.point};\n    color: white;\n    font-weight: bold;\n    border-top: 2px solid black;\n    border-bottom: 2px solid black;\n  }\n`;\n\nconst StageTitle = styled.header`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 23px;\n  color: ${(props) => props.theme.color.title};\n`;\n\nconst StageCell = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${(props) =>\n    props.theme.color.stage[props.stageId].background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  text-align: center;\n`;\n\nconst hoverFrames = keyframes`\n0%{\n  background-color: white;\n}\n100%{\n  background-color: ${(props) => props.theme.color.hover};\n  color: white;\n}\n`;\n\nconst StageArrow = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  text-transform: uppercase;\n  font-weight: bold;\n  &:hover {\n    cursor: pointer;\n    background-color: #6b3074;\n    color: white;\n    animation: ${hoverFrames} 0.2s linear;\n  }\n`;\n\nconst TimeTable = ({ screen, state, fullpageApi }) => {\n  const [hour, setHour] = useState(0);\n\n  useEffect(() => {\n    setHour(new Date().getHours());\n  }, []);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const section = fullpageApi.getActiveSection()?.index;\n      const slide = fullpageApi.getActiveSlide()?.index;\n      if (event.code === \"Digit1\" && slide !== 0) {\n        fullpageApi.moveTo(2, 0);\n      } else if (event.code === \"Digit2\" && slide !== 1) {\n        fullpageApi.moveTo(2, 1);\n      } else if (event.code === \"Digit3\" && slide !== 2) {\n        fullpageApi.moveTo(2, 2);\n      } else if (event.code === \"KeyH\" && section !== 0) {\n        fullpageApi.moveTo(1);\n      } else if (event.code === \"Space\" && section !== 1) {\n        fullpageApi.moveTo(2, 1);\n        event.stopImmediatePropagation();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [fullpageApi, state]);\n\n  const goToStage = (stageIdx) => {\n    return () => {\n      fullpageApi.moveTo(2, stageIdx);\n    };\n  };\n\n  return screen === \"mobile\" ? (\n    <Wrapper>Not Support Mobile Yet</Wrapper>\n  ) : (\n    <Wrapper>\n      <Title>\n        <TitleText>AlwaysFestival3</TitleText>\n        <Info>\n          <InfoText>Enjoy the Festival of Legends!</InfoText>\n          <InfoText>Every 2 hours, New Stage Come.</InfoText>\n          <InfoText>Keyboard Shortcut : 1, 2, 3, H, Space, Arrow</InfoText>\n        </Info>\n      </Title>\n      <Content>\n        <Time hour={hour}>\n          <TimeCell gridRow={\"2 / 4\"}>00:00</TimeCell>\n          <TimeCell gridRow={\"4 / 6\"}>02:00</TimeCell>\n          <TimeCell gridRow={\"6 / 8\"}>04:00</TimeCell>\n          <TimeCell gridRow={\"8 / 10\"}>06:00</TimeCell>\n          <TimeCell gridRow={\"10 / 12\"}>08:00</TimeCell>\n          <TimeCell gridRow={\"12 / 14\"}>10:00</TimeCell>\n          <TimeCell gridRow={\"14 / 16\"}>12:00</TimeCell>\n          <TimeCell gridRow={\"16 / 18\"}>14:00</TimeCell>\n          <TimeCell gridRow={\"18 / 20\"}>16:00</TimeCell>\n          <TimeCell gridRow={\"20 / 22\"}>18:00</TimeCell>\n          <TimeCell gridRow={\"22 / 24\"}>20:00</TimeCell>\n          <TimeCell gridRow={\"24 / 26\"}>22:00</TimeCell>\n          <TimeCell gridRow={\"26 / 28\"}>24:00</TimeCell>\n        </Time>\n        <Stage hour={hour}>\n          <StageTitle>Stage A</StageTitle>\n          {stageA.map((stage, idx) => (\n            <StageCell key={idx} stageId={0}>\n              {stage.artist}\n            </StageCell>\n          ))}\n          <StageArrow onClick={goToStage(0)}>Go This Stage</StageArrow>\n        </Stage>\n        <Stage hour={hour}>\n          <StageTitle>Stage B</StageTitle>\n          {stageB.map((stage, idx) => (\n            <StageCell key={idx} stageId={1}>\n              {stage.artist}\n            </StageCell>\n          ))}\n          <StageArrow onClick={goToStage(1)}>Go This Stage</StageArrow>\n        </Stage>\n        <Stage hour={hour}>\n          <StageTitle>Stage C</StageTitle>\n          {stageC.map((stage, idx) => (\n            <StageCell key={idx} stageId={2}>\n              {stage.artist}\n            </StageCell>\n          ))}\n          <StageArrow onClick={goToStage(2)}>Go This Stage</StageArrow>\n        </Stage>\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default TimeTable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport YouTube from \"@u-wave/react-youtube\";\n\nconst STAGE_NAME = [\"STAGE A\", \"STAGE B\", \"STAGE C\"];\n\nconst hoverFrames = keyframes`\n0%{\n  background-color: white;\n}\n100%{\n  background-color: ${(props) => props.theme.color.hover};\n  color: white;\n}\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  height: 150px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst StageTitle = styled.div`\n  width: 100%;\n  height: 100%;\n  flex: 0.6;\n  font-size: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ScheduleButton = styled.div`\n  width: 70%;\n  height: 60px;\n  flex: 0.2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => props.theme.color.hover};\n    color: white;\n    animation: ${hoverFrames} 0.2s linear;\n  }\n`;\n\nconst YoutubeWrapper = styled.div`\n  width: 100%;\n  height: 70%;\n`;\n\nconst Banner = styled.div`\n  width: 100%;\n  height: 50px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  padding: 0px 30px;\n`;\n\nconst marquee = keyframes`\n  from{\n    -webkit-transform: translate(100%, 0);\n    transform: translate(100%, 0);\n  }\n  to{\n    -webkit-transform: translate(100%, 0);\n    transform: translate(-100%, 0);\n  }\n  `;\n\nconst BannerText = styled.div`\n  min-width: 100%;\n  width: max-content;\n  white-space: nowrap;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  animation: ${marquee} 20s linear infinite;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: auto;\n`;\n\nconst Button = styled.div`\n  flex: 0.2;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => props.theme.color.hover};\n    color: white;\n    animation: ${hoverFrames} 0.2s linear;\n  }\n`;\n\nconst Player = ({ stageNo, fullpageApi, data, play }) => {\n  const [textIndex, setTextIndex] = useState(0);\n  const [pause, setPause] = useState(false);\n  const videoRef = useRef();\n  const onStageData = data[Math.floor(new Date().getHours() / 2)];\n\n  useEffect(() => {\n    setInterval(() => {\n      setTextIndex((v) => (v + 1) % onStageData.comments.length);\n    }, 20000);\n  }, [onStageData]);\n\n  useEffect(() => {\n    if (play) {\n      if (pause) {\n        videoRef.current.playerInstance.pauseVideo();\n      } else {\n        videoRef.current.playerInstance.playVideo();\n      }\n    }\n  }, [pause, play]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const section = fullpageApi.getActiveSection()?.index;\n      const slide = fullpageApi.getActiveSlide()?.index;\n\n      if (section === 1) {\n        if (play) {\n          if (event.code === \"ArrowRight\") {\n            const now = videoRef.current.playerInstance.getCurrentTime();\n            videoRef.current.playerInstance.seekTo(now + 10);\n          } else if (event.code === \"ArrowLeft\") {\n            const now = videoRef.current.playerInstance.getCurrentTime();\n            videoRef.current.playerInstance.seekTo(now - 10);\n          } else if (event.code === \"ArrowUp\") {\n            const now = videoRef.current.playerInstance.getVolume();\n            videoRef.current.playerInstance.setVolume(now + 5);\n          } else if (event.code === \"ArrowDown\") {\n            const now = videoRef.current.playerInstance.getVolume();\n            videoRef.current.playerInstance.setVolume(now - 5);\n          }\n        }\n        if (event.code === \"Space\") {\n          setPause((v) => !v);\n        } else if (event.code === \"KeyH\") {\n          setPause(true);\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [fullpageApi, play]);\n\n  const goToStage = (stageIdx) => {\n    return () => {\n      fullpageApi.moveTo(2, stageIdx);\n    };\n  };\n\n  const goToSchedule = () => {\n    return () => {\n      fullpageApi.moveTo(1);\n    };\n  };\n\n  return (\n    <Wrapper>\n      <Header>\n        <StageTitle>{STAGE_NAME[stageNo]}</StageTitle>\n        <ScheduleButton onClick={goToSchedule()}>Go to Schedule</ScheduleButton>\n      </Header>\n      <YoutubeWrapper>\n        <YouTube\n          ref={videoRef}\n          width=\"100%\"\n          height=\"100%\"\n          video={onStageData.video_id}\n          disableKeyboard={true}\n          annotations={false}\n          showRelatedVideos={false}\n          showInfo={false}\n          modestBranding={true}\n        />\n      </YoutubeWrapper>\n      <Banner>\n        <BannerText>{onStageData.comments[textIndex]}</BannerText>\n      </Banner>\n      <Footer>\n        <Button onClick={goToStage((stageNo + 2) % 3)}>\n          Go to {STAGE_NAME[(stageNo + 2) % 3]}\n        </Button>\n        <Button onClick={goToStage((stageNo + 1) % 3)}>\n          Go to {STAGE_NAME[(stageNo + 1) % 3]}\n        </Button>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Logo = styled.div`\n  p {\n    font-family: \"Retrock\";\n    font-size: 7rem;\n  }\n`;\n\nconst Home = () => {\n  return (\n    <Wrapper>\n      <Logo>\n        <p>AlwaysFestival3</p>\n      </Logo>\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Stage = () => {\n  return <Wrapper>Stage</Wrapper>;\n};\n\nexport default Stage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Lineup = () => {\n  return <Wrapper>Lineup</Wrapper>;\n};\n\nexport default Lineup;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Navigation = () => {\n  return <Wrapper>Navigation</Wrapper>;\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport { useMediaQuery } from \"react-responsive\";\nimport TimeTable from \"./TimeTable\";\nimport Player from \"./Player\";\nimport { stageA, stageB, stageC } from \"../data\";\nimport Home from \"./Home\";\nimport Stage from \"./Stage\";\nimport Lineup from \"./Lineup\";\nimport Navigation from \"./Navigation\";\n\nconst Fullpage = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const [play, setPlay] = useState([false, false, false]);\n\n  const afterLoadFn = (origin, destination, direction) => {\n    if (destination.index === 0) {\n      setPlay([false, false, false]);\n    }\n  };\n\n  const afterSlideLoadFn = (section, origin, destination, direction) => {\n    const newPlay = play.map((v, i) => {\n      return i === destination.index ? true : false;\n    });\n    setPlay(newPlay);\n  };\n\n  const renderFn = ({ state, fullpageApi }) => {\n    return (\n      <ReactFullpage.Wrapper>\n        <div className=\"section\">\n          <Lineup />\n        </div>\n        <div className=\"section active\">\n          <div className=\"slide active\" data-anchor=\"slide1\">\n            <Home />\n          </div>\n          <div className=\"slide\" data-anchor=\"slide2\">\n            <Stage />\n          </div>\n          <div className=\"slide\" data-anchor=\"slide3\">\n            <Stage />\n          </div>\n          <div className=\"slide\" data-anchor=\"slide4\">\n            <Stage />\n          </div>\n        </div>\n        <div className=\"section\">\n          <Navigation />\n        </div>\n      </ReactFullpage.Wrapper>\n    );\n  };\n\n  return (\n    <ReactFullpage\n      //fullpage options\n      licenseKey=\"?E?8d8Q#o2\"\n      scrollingSpeed={800} /* Options here */\n      controlArrows={false}\n      loopHorizontal={false}\n      normalScrollElements=\"div\"\n      keyboardScrolling={true}\n      //fullpage events\n      afterLoad={afterLoadFn}\n      afterSlideLoad={afterSlideLoadFn}\n      render={renderFn}\n    />\n  );\n};\n\nexport default Fullpage;\n","export default {\n  color: {\n    title: \"#195c77\",\n    point: \"#7268a6\",\n    hover: \"#6b3074\",\n    stage: [\n      { background: \"#D8E0BB\" },\n      { background: \"#B6CEC7\" },\n      { background: \"#86A3C3\" },\n    ],\n  },\n};\n","import React from \"react\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport Fullpage from \"./Fullpage\";\nimport Theme from \"../Styles/Theme\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nconst Landscape = styled.div`\n  @media screen and (max-height: 475px) {\n    visibility: visible;\n  }\n  visibility: hidden;\n  position: fixed;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  color: #061820;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  div {\n    font-size: 40px;\n    font-weight: bold;\n    font-family: \"Great Vibes\", cursive;\n  }\n`;\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={Theme}>\n      <>\n        <GlobalStyles />\n        <Fullpage />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}